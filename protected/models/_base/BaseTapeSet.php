<?php

/**
 * This is the model base class for the table "tape_set".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TapeSet".
 *
 * Columns in table "tape_set" available as properties of the model,
 * followed by relations of table "tape_set" available as properties of the model.
 *
 * @property integer $id
 * @property string $set_name
 * @property integer $no_of_tapes
 * @property string $speaker
 * @property integer $tape_start_number
 * @property string $catalogue_prefix
 * @property string $remarks
 *
 * @property TapeOut[] $tapeOuts
 */
abstract class BaseTapeSet extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'tape_set';
    }

    public static function representingColumn() {
        return 'set_name';
    }

    public function rules() {
        return array(
            array('set_name, no_of_tapes, speaker, tape_start_number, catalogue_prefix', 'required'),
            array('no_of_tapes, tape_start_number', 'numerical', 'integerOnly'=>true),
            array('set_name', 'length', 'max'=>256),
            array('speaker', 'length', 'max'=>128),
            array('catalogue_prefix', 'length', 'max'=>32),
            array('remarks', 'length', 'max'=>512),
            array('remarks', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, set_name, no_of_tapes, speaker, tape_start_number, catalogue_prefix, remarks', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'tapeOuts' => array(self::HAS_MANY, 'TapeOut', 'set_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'set_name' => Yii::t('app', 'Set Name'),
                'no_of_tapes' => Yii::t('app', 'No Of Tapes'),
                'speaker' => Yii::t('app', 'Speaker'),
                'tape_start_number' => Yii::t('app', 'Tape Start Number'),
                'catalogue_prefix' => Yii::t('app', 'Catalogue Prefix'),
                'remarks' => Yii::t('app', 'Remarks'),
                'tapeOuts' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('set_name', $this->set_name, true);
        $criteria->compare('no_of_tapes', $this->no_of_tapes);
        $criteria->compare('speaker', $this->speaker, true);
        $criteria->compare('tape_start_number', $this->tape_start_number);
        $criteria->compare('catalogue_prefix', $this->catalogue_prefix, true);
        $criteria->compare('remarks', $this->remarks, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
            'ActiveRecordRelation' => array(
                'class' => 'EActiveRecordRelationBehavior',
            ),
        ), parent::behaviors());
    }
}